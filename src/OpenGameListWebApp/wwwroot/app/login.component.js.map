{"version":3,"sources":["login.component.ts"],"names":["LoginComponent","fb","router","authService","this","title","loginForm","loginError","isLoggedIn","navigate","group","username","forms_1","Validators","required","password","prototype","performLogin","e","_this","preventDefault","value","login","subscribe","data","auth","getAuth","alert","access_token","err","console","log","onRegister","__decorate","core_1","Component","selector","template","FormBuilder","router_1","Router","auth_service_1","AuthService"],"mappings":"yhCAkCI,SAAAA,eAAoBC,GAAyBC,OAAwBC,aAAjDC,KAAAH,GAAAA,GAAyBG,KAAAF,OAAAA,OAAwBE,KAAAD,YAAAA,YAJrEC,KAAAC,MAAQ,QACRD,KAAAE,UAAuB,KACvBF,KAAAG,YAAa,EAGLH,KAAKD,YAAYK,cACjBJ,KAAKF,OAAOO,UAAU,KAE1BL,KAAKE,UAAYL,GAAGS,OAChBC,UAAW,GAAIC,QAAAC,WAAWC,UAC1BC,UAAW,GAAIH,QAAAC,WAAWC,YA2BtC,OAvBId,eAAAgB,UAAAC,aAAA,SAAaC,GAAb,IAAAC,MAAAf,KACIc,EAAEE,iBACF,IAAIT,SAAWP,KAAKE,UAAUe,MAAMV,SAChCI,SAAWX,KAAKE,UAAUe,MAAMN,SACpCX,KAAKD,YAAYmB,MAAMX,SAAUI,UAC5BQ,UAAU,SAACC,MAEJL,MAAKZ,YAAa,EAClB,IAAIkB,KAAON,MAAKhB,YAAYuB,UAC5BC,MAAM,iBAAmBF,KAAKG,cAC9BT,MAAKjB,OAAOO,UAAU,MAE1B,SAACoB,KACGC,QAAQC,IAAI,KAEZZ,MAAKZ,YAAa,KAKlCP,eAAAgB,UAAAgB,WAAA,WACI5B,KAAKF,OAAOO,UAAU,cApCjBT,eAAciC,YAvB1BC,OAAAC,WACGC,SAAU,QACVC,SAAU,8+BA0BczB,QAAA0B,YAA6BC,SAAAC,OAA6BC,eAAAC,eALzE1C","file":"login.component.js","sourcesContent":["import { Component } from \"@angular/core\";\r\nimport { FormBuilder, Validators, FormGroup } from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { UserEditComponent } from \"./user-edit.component\";\r\n\r\n@Component({\r\n    selector: 'login',\r\n    template: `\r\n<div class=\"login-container\">\r\n    <h2 class=\"form-login-heading\">Login</h2>\r\n    <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"loginError\">\r\n        <strong>Warning:</strong> Username or Password mismatch\r\n    </div>\r\n    <form class=\"form-login\" [formGroup]=\"loginForm\" (submit)=\"performLogin($event)\">\r\n        <input formControlName=\"username\" type=\"text\" class=\"form-control\" placeholder=\"Your username or e-mail address\" required autofocus />\r\n        <input formControlName=\"password\" type=\"password\" class=\"form-control\" placeholder=\"Your password\" required />\r\n        <div class=\"checkbox\">\r\n            <label><input type=\"checkbox\" value=\"remember-me\"/>Remember me</label>\r\n        </div>\r\n        <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Sign in</button>\r\n    </form>\r\n    <div class=\"register-link\">\r\n        Don't have an acoount yet?\r\n        <a (click)=\"onRegister()\">Click here to register!</a>\r\n    </div>\r\n</div>\r\n    `\r\n})\r\nexport class LoginComponent {\r\n    title = 'Login';\r\n    loginForm: FormGroup = null;\r\n    loginError = false;\r\n\r\n    constructor(private fb: FormBuilder, private router: Router, private authService: AuthService) {\r\n        if (this.authService.isLoggedIn()) {\r\n            this.router.navigate(['']);\r\n        }\r\n        this.loginForm = fb.group({\r\n            username: ['', Validators.required],\r\n            password: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    performLogin(e) {\r\n        e.preventDefault();\r\n        let username = this.loginForm.value.username;\r\n        let password = this.loginForm.value.password;\r\n        this.authService.login(username, password)\r\n            .subscribe((data) => {\r\n                    //login successful\r\n                    this.loginError = false;\r\n                    var auth = this.authService.getAuth();\r\n                    alert('Our Token is: ' + auth.access_token);\r\n                    this.router.navigate(['']);\r\n                },\r\n                (err) => {\r\n                    console.log((err));\r\n                    //login failure\r\n                    this.loginError = true;\r\n                }\r\n            );\r\n    }\r\n\r\n    onRegister() {\r\n        this.router.navigate(['register']);\r\n    }\r\n}"]}